---
- name: Franklin
  hosts: franklin
  remote_user: pi
  become: true
  tasks:
    - name: Common Configuiration
      ansible.builtin.include_tasks:
        file: common.yml
    - name: Hardware Video Encoding
      ansible.builtin.lineinfile:
        path: /boot/config.txt
        search_string: 'dtoverlay='
        line: 'dtoverlay/=/rpivid-v4l2'
    - name: Fan controls GPIO Configuration
      ansible.builtin.lineinfile:
        path: /boot/config.txt
        search_string: 'dtoverlay='
        line: 'dtoverlay/=/gpio-fan,gpiopin/=/3,temp/=/60000'
    - name: Copy fan controls script
      ansible.builtin.copy:
        src: ../fancontrol/fancontrol.py
        dest: /home/pi/fancontrol/
        owner: pi
        group: pi
        mode: '0755'
    - name: Copy fan controls service
      ansible.builtin.copy:
        src: ../fancontrol/fancontrol.service
        dest: /lib/systemd/system/fancontrol.service
        owner: pi
        group: pi
        mode: 0755
    - name: Load, enable & start fancontrol service
      ansible.builtin.systemd:
        daemon_reload: true
        name: fancontrol
        enabled: true
        state: started
    - name: Install NFS Client
      ansible.builtin.apt:
        name:
          - nfs-common
    - name: NFS Mount md0 RAID from Eleanor
      ansible.posix.mount:
        src: eleanor:/media/md0
        path: /media/md0
        state: mounted
        fstype: nfs
    - name: NFS Mount md1 RAID from Eleanor
      ansible.posix.mount:
        src: eleanor:/media/md1
        path: /media/md1
        state: mounted
        fstype: nfs
    - name: Install DDClient
      ansible.builtin.apt:
        name:
          - ddclient
    - name: Copy ddclient configuration
      ansible.builtin.copy:
        remote_src: true
        src: /media/md1/config/ddns/ddclient.conf
        dest: /etc/ddclient.conf
    - name: Start DDclient service
      ansible.builtin.systemd:
        name: ddclient
        enabled: true
        state: started
    - name: Install docker auxiliary packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - curl
          - ca-certificates
    - name: Add repository key
      ansible.builtin.get_url:
        force: true
        url: https://download.docker.com/linux/raspbian/gpg
        dest: /etc/apt/trusted.gpg.d/docker.gpg
    - name: Adding repository
      ansible.builtin.apt_repository:
        repo: deb [arch=arm64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/raspbian bullseye stable
        state: present
        filename: docker
        update_cache: true
    - name: Install docker packages
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
    - name: Copy docker files
      ansible.builtin.copy:
        src: '{{item}}'
        dest: /media/md1/config/docker/
      loop:
        - ../docker/dockerfile.deluge
        - ../docker/dockerfile.jellyfin
        - ../docker/dockerfile.pihole
        - ../docker/dockerfile.prowlarr
        - ../docker/dockerfile.radarr
        - ../docker/dockerfile.sonarr
        - ../docker/dockerfile.unbound
    - name: Docker compose
      ansible.builtin.command:
        cmd: docker compose -f {{item}} up -d
      loop:
        - /media/md1/config/docker/dockerfile.deluge
        - /media/md1/config/docker/dockerfile.jellyfin
        - /media/md1/config/docker/dockerfile.pihole
        - /media/md1/config/docker/dockerfile.prowlarr
        - /media/md1/config/docker/dockerfile.radarr
        - /media/md1/config/docker/dockerfile.sonarr
        - /media/md1/config/docker/dockerfile.unbound
    - name: Delete Docker files
      ansible.builtin.file:
        path: /media/md1/config/docker
        state: absent
    - name: Download piVPN script
      ansible.builtin.get_url:
        url: https://install.pivpn.io
        dest: /media/md1/config/pivpn/install.sh
    - name: Enable execute permission
      ansible.builtin.file:
        path: /media/md1/config/pivpn/install.sh
        owner: pi
        group: pi
        mode: 0755
    - name: Execute piVPN setup
      ansible.builtin.command:
        cmd: bash /media/md1/config/pivpn/install.sh --unattended /media/md1/config/pivpn/setupVars.conf
    - name: Delete piVPN script
      ansible.builtin.file:
        path: /media/md1/config/pivpn/install.sh
        state: absent
