- name: Download Docker script
  when: clean is defined
  ansible.builtin.get_url:
    url: https://get.docker.com
    dest: /home/pi/installDocker.sh
    mode: 0755
    owner: pi
    group: pi
- name: Execute Docker script
  when: clean is defined
  ignore_errors: true
  ansible.builtin.command:
    cmd: bash /home/pi/installDocker.sh
- name: Delete docker installation script
  when: clean is defined
  ansible.builtin.file:
    path: /home/pi/installDocker.sh
    state: absent
- name: Install Docker Compose
  when: clean is defined
  ansible.builtin.apt:
    name: docker-compose
- name: Cron job for Docker Pruning
  ansible.builtin.cron:
    name: Docker Pruning
    minute: 0
    hour: 2
    day: 1
    user: root
    job: sudo docker system prune -a
- name: Create docker_config
  ansible.builtin.file:
    path: /home/pi/docker_config
    state: directory
    mode: 0755
    owner: pi
    group: pi
- name: Copy Original Config
  ignore_errors: true
  when: clean is defined
  become: false
  ansible.builtin.copy:
    src: /mnt/md0/docker_config/{{ item }}/
    dest: /home/pi/docker_config/{{ item }}/
    mode: 0755
    owner: pi
    group: pi
    remote_src: true
  loop: "{{ containers }}"
- name: Crontab backup
  ansible.builtin.cron:
    name: "Docker configuration backup {{ item }}"
    minute: "0"
    hour: "2"
    user: root
    job: "sudo -u pi rsync -a --delete-after /home/pi/docker_config/{{ item }} /mnt/md0/docker_config/"
  loop: "{{ containers }}"
- name: Create certbot secret directory
  when: inventory_hostname=='franklin'
  ansible.builtin.file:
    path: /root/.secrets/certbot
    state: directory
    mode: 0700
    owner: root
    group: root
- name: Create ddclient secret directory
  when: inventory_hostname=='franklin'
  ansible.builtin.file:
    path: /root/.secrets/ddclient
    state: directory
    mode: 0700
    owner: root
    group: root
- name: Copy Cloudflare API Key for Certbot
  when: inventory_hostname=='franklin'
  ansible.builtin.template:
    src: certbot/cloudflare.ini
    dest: ~/.secrets/certbot/cloudflare.ini
- name: Copy DDClient configuration
  when: inventory_hostname=='franklin'
  ansible.builtin.template:
    src: ddclient/ddclient.conf
    dest: ~/.secrets/ddclient/ddclient.conf
- name: Copy homepage configuration
  when: inventory_hostname=='franklin'
  ansible.builtin.template:
    src: homepage/{{ item }}
    dest: /home/pi/docker_config/homepage/config/{{ item }}
  loop:
    - settings.yaml
    - services.yaml
    - widgets.yaml
    - docker.yaml
    - bookmarks.yaml
- name: Copy Traefik Configuration file
  when: inventory_hostname=='franklin'
  ansible.builtin.copy:
    src: traefik/{{ item }}
    dest: /home/pi/docker_config/traefik/
  loop:
    - traefik.yml
    - config.yml
- name: Pull latest images
  ignore_errors: true
  ansible.builtin.command:
    cmd: sudo docker pull {{ item }}
  loop: "{{ images }}"
- name: Stop containers
  ignore_errors: true
  ansible.builtin.command:
    cmd: sudo docker stop {{ item }}
  loop: "{{ containers }}"
- name: Remove containers
  ignore_errors: true
  ansible.builtin.command:
    cmd: sudo docker rm {{ item }}
  loop: "{{ containers }}"
- name: Copy docker files
  ignore_errors: true
  ansible.builtin.template:
    src: "{{ item }}/docker-compose.yml"
    dest: /home/pi/docker_files/{{ item }}/
  loop: "{{ containers }}"
- name: Start containers
  ignore_errors: true
  ansible.builtin.command:
    cmd: docker-compose -f /home/pi/docker_files/{{ item }}/docker-compose.yml up -d
  loop: "{{ containers }}"
- name: Delete Docker files
  ansible.builtin.file:
    path: /home/pi/docker_files/
    state: absent